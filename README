Marla - The Websites of Aaron Faanes

Marla contains the web configuration and content for each of my websites. Each
website can be found under its directory, with the following organization:

example.com/            Root for this website
example.com/httpd/      Apache configuration
example.com/static/     Static content: css, js, etc.
example.com/mason/      Mason component directory

This organization will be created automatically by bin/make-site. You should use
that command when starting from scratch. make-site should construct a relatively
complete framework for a new site. Marla will indicate if any manual
intervention is required.

While Marla intends to be a mostly-automated tool for creating and deploying
websites, I haven't intended it to be used outside my own setup. As a result,
any intrepid people who wish to steal it are welcome to do so, but do so at
their own risk.

Each website will be built using make and installed using make install.
Installation via RPM is also supported. By convention, each website will become
a new subpackage of marla, such as marla-example-com.

### Making a new website

1. ./bin/make-site www.example.com
2. cd www.example.com
3. ... Setup httpd.conf, CGI, etc ...

### Installing

Marla is designed to support incremental roll-out of web applications. Generally
speaking, you should run marla from within a chroot.

#### Configuration

One problem often encountered when testing websites is how to deal with DNS
resolution. Marla solves this problem by separating configuration into a 'local'
profile and a 'linode' profile.

The 'local' profile will map each of your websites to a different port, so
website-1 will be localhost:8080, website-2 will be localhost:8081 and so forth.

    ./configure local

The 'linode' profile behaves as you'd expect on a production server: each
website is mapped to its proper DNS name.

    ./configure linode

#### Deployment

##### Local Deployment

Local deployment will often be done via a specified PREFIX, like so:

    make install PREFIX=/tmp/marla/1

For maximum safety, you should deploy to a temporary directory, as shown above,
to ensure things are working properly without needing to corrupt a chroot.

##### Local Chrooted Deployment

vim: set tw=80 et! :
