include build/default.config

# The following arguments are provided from ./configure
export BUILD
export BUILDNAME
export IP
export PREFIX

export NAME
export FULLNAME

export OUTDIR ?= release
export RPMDIR ?= $$HOME/rpmbuild

export HTTPDMARLA=conf/$(NAME)
export HTTPDETC=$(PREFIX)/etc/httpd/$(HTTPDMARLA)

export MARLASHARE=$(PREFIX)/usr/share/$(NAME)

# Default rule
all: build
.PHONY: all

Makefile: Makefile.in configure $(BUILD) build/default.config
	./configure $(BUILDNAME)

build: websites
	for site in `cat websites`; do \
		$(MAKE) -C $$site $@; \
	done
.PHONY: build

# Be certain that arguments passed to this make
# are also passed to the uninstall's make.
install: uninstall build install-chroot install-httpd $(MARLASHARE)
	if test x$(PORT) = x; then                    \
		PORT=$(LISTEN_BASE);                      \
	else                                          \
		PORT=$(PORT);                             \
	fi;                                           \
	for site in `cat websites`; do                \
		if test x$(LISTEN_BASE) != x; then        \
			SERVER_NAME=$(IP):$$PORT;             \
			LISTEN_DIRECTIVE="Listen $$PORT";     \
		else                                      \
			SERVER_NAME=$$site:$$PORT;            \
			LISTEN_DIRECTIVE="# No listen needed";\
		fi;                                       \
		$(MAKE) -C $$site                         \
		SERVER_NAME=$$SERVER_NAME                 \
		PORT=$$PORT                               \
		LISTEN_DIRECTIVE="$$LISTEN_DIRECTIVE"     \
		$@;                                       \
		if test x$(LISTEN_BASE) != x; then        \
			let PORT++;                           \
		fi;                                       \
	done
.PHONY: install

$(MARLASHARE): $(PREFIX)
	mkdir -p $@

bindir=$(PREFIX)/usr/bin

install-chroot: $(wildcard ./bin/chroot-*) | $(bindir)
	for script in $^; do \
		cp $$script $(bindir)/marla-`basename $$script`; \
	done;

$(bindir):
	mkdir -p $@

install-httpd: $(HTTPDETC) httpd/*.conf
	cp httpd/*.conf $(HTTPDETC)
	PORT=$(PORT); \
	if test x$$PORT = x; then \
		PORT="*"; \
		NAMEDVHOST_DIRECTIVE="# Using port-based virtual hosting"; \
	else \
		NAMEDVHOST_DIRECTIVE="NameVirtualHost $(IP):$(PORT)\nListen $(PORT)"; \
	fi; \
	find $(HTTPDETC) -name '*.conf' | xargs sed -i \
		-e "s/@NAMEDVHOST_DIRECTIVE@/$$NAMEDVHOST_DIRECTIVE/g" \
		-e "s#@HTTPDMARLA@#$(HTTPDMARLA)#g" \
		-e "s/@IP@/$(IP)/g" \
		-e "s/@PORT@/$$PORT/g"
.PHONY: install-httpd

$(HTTPDETC): $(PREFIX)
	mkdir -p $@

$(PREFIX):
	mkdir -p $@

tarfile=$(FULLNAME).tar.gz

RPMFLAGS ?= --ba
rpm: $(OUTDIR)/$(tarfile) spec | $(RPMDIR)
	cp -u $(OUTDIR)/$(tarfile) $(RPMDIR)/SOURCES
	cp -u $(OUTDIR)/$(FULLNAME).spec $(RPMDIR)/SPECS
	rpmbuild $(RPMFLAGS) $(RPMDIR)/SPECS/$(FULLNAME).spec
	cd $(OUTDIR); \
	for package in `rpm -q --specfile ./$(FULLNAME).spec`; do \
		arch=`echo $$package | grep -E -o '[^.]+$$'`; \
		filename="$(RPMDIR)/RPMS/$$arch/$$package.rpm"; \
		[ -e `basename $$filename` ] || ln -s $$filename; \
	done
.PHONY: rpm

tar: $(OUTDIR)/$(tarfile)
.PHONY: tar

$(OUTDIR)/$(tarfile):
	tar czf $@ \
		--exclude-vcs \
		--exclude-backups \
		--exclude='release/**' \
		--exclude='**-wip' \
		--transform='s,^\.,$(FULLNAME),g' \
		.;
.PHONY: $(OUTDIR)/$(tarfile)
# I use phony here to ensure the tarfile is always regenerated

spec: $(OUTDIR)/$(FULLNAME).spec
.PHONY: spec

$(OUTDIR)/$(FULLNAME).spec:
	echo -n >$@0-wip
	echo "%define projectname $(NAME)" >>$@-wip
	echo "%define fullname $(FULLNAME)" >>$@-wip
	echo "%define buildname $(BUILDNAME)" >>$@-wip
	cat rpm.spec.in >>$@-wip
	for site in `cat websites`; do                 \
		echo >>$@-wip;                             \
		cat $$site/rpm.spec.in >>$@-wip;           \
	done
	mv $@-wip $@
.PHONY: $(OUTDIR)/$(FULLNAME).spec
# I use phony here to ensure the specfile is always regenerated

$(OUTDIR):
	mkdir -p $(OUTDIR)

$(RPMDIR):
	mkdir -p $@
	cd $@ && mkdir -p SOURCES SPECS BUILD RPMS SRPMS

uninstall:
	if echo $(HTTPDETC) | grep -q -e '$(NAME)'; then \
		rm -rf $(HTTPDETC);                        \
	fi;
	for site in `cat websites`; do                 \
		$(MAKE) -C $$site $@;                      \
	done
	# Be certain that arguments passed to this make
	# are also passed to the install's make.
.PHONY: uninstall

# We do NOT delete RPMDIR during clean, since we don't own it.
clean:
	[ "$(OUTDIR)" != "/" ] && rm -rf $(OUTDIR)
	for site in `cat websites`; do \
		$(MAKE) -C $$site $@; \
	done
.PHONY: clean

# vim: set noet :
